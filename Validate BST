class Solution {
    public boolean isValidBST(TreeNode root) {
        int p = inorderTraversal(root);
        if(p==1){
            return true;
        }
        return false;
        
    }
    public int inorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        TreeNode curr = root;
        while (curr != null || !stack.isEmpty()) {
            while (curr != null) {
                stack.push(curr);
                curr = curr.left;
            }
            curr = stack.pop();
            res.add(curr.val);
            curr = curr.right;
        }
        int c=1;
        for(int i=0;i<res.size()-1;i++){
            if(res.get(i)<res.get(i+1)){
                c=c+1;
            }
        }
        if(c==res.size()){
            return 1;
        }
        return 0;
        
    }

}
